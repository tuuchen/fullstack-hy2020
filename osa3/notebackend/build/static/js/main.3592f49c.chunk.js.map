{"version":3,"sources":["components/Footer.js","components/Note.js","components/Notification.js","services/notes.js","App.js","index.js"],"names":["Footer","text","style","color","fontStyle","fontSize","Note","note","toggleImportance","label","important","className","content","onClick","Notification","message","axios","get","then","response","data","newObject","post","id","put","App","useState","notes","setNotes","newNote","setNewNote","showAll","setShowAll","errorMessage","setErrorMessage","useEffect","console","log","noteService","initialNotes","notesToShow","filter","map","key","find","n","changedNote","returnedNote","catch","error","setTimeout","toggleImportanceOf","onSubmit","event","preventDefault","target","value","noteObject","Date","now","date","toISOString","Math","random","concat","onChange","type","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.3592f49c.chunk.js","sourcesContent":["import React from 'react';\r\n\r\nconst Footer = ({ text }) => {\r\n  const footerStyle = {\r\n    color: 'green',\r\n    fontStyle: 'italic',\r\n    fontSize: 16,\r\n  };\r\n\r\n  return (\r\n    <div style={footerStyle}>\r\n      <br />\r\n      <em>{text}</em>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Footer;\r\n","import React from 'react';\r\n\r\nconst Note = ({ note, toggleImportance }) => {\r\n  const label = note.important ? 'make not important' : 'make important';\r\n\r\n  return (\r\n    <li className='note'>\r\n      {note.content}\r\n      <button onClick={toggleImportance}>{label}</button>\r\n    </li>\r\n  );\r\n};\r\n\r\nexport default Note;\r\n","import React from 'react';\r\n\r\nconst Notification = ({ message }) => {\r\n  if (message === null) {\r\n    return null;\r\n  }\r\n\r\n  return <div className=\"error\">{message}</div>;\r\n};\r\n\r\nexport default Notification;\r\n","import axios from 'axios';\r\n\r\n// URL for json-server\r\n// const baseUrl = 'http://localhost:3001/notes';\r\n\r\n// URL for local backend\r\n// const baseUrl = 'http://localhost:3001/api/notes';\r\n\r\n// URL for heroku \r\n// const baseUrl = 'http://fs-notebackend.herokuapp.com/api/notes'\r\n\r\n// URL for serving frontend via backend\r\nconst baseUrl = '/api/notes'\r\n\r\nconst getAll = () => {\r\n  const request = axios.get(baseUrl);\r\n  return request.then((response) => response.data);\r\n};\r\n\r\nconst create = (newObject) => {\r\n  const request = axios.post(baseUrl, newObject);\r\n  return request.then((response) => response.data);\r\n};\r\n\r\nconst update = (id, newObject) => {\r\n  const request = axios.put(`${baseUrl}/${id}`, newObject);\r\n  return request.then((response) => response.data);\r\n};\r\n\r\n// ES6\r\nexport default { getAll, create, update };\r\n\r\n/* export default {\r\n  getAll: getAll,\r\n  create: create,\r\n  update: update,\r\n}; */\r\n","import React, { useState, useEffect } from 'react';\r\nimport Footer from './components/Footer';\r\nimport Note from './components/Note';\r\nimport Notification from './components/Notification';\r\nimport noteService from './services/notes';\r\n\r\nconst App = () => {\r\n  const [notes, setNotes] = useState([]);\r\n  const [newNote, setNewNote] = useState('');\r\n  const [showAll, setShowAll] = useState(true);\r\n  const [errorMessage, setErrorMessage] = useState(null);\r\n\r\n  useEffect(() => {\r\n    console.log('effect');\r\n    noteService.getAll().then((initialNotes) => {\r\n      console.log('promise fulfilled');\r\n      setNotes(initialNotes);\r\n    });\r\n  }, []);\r\n\r\n  const addNote = (event) => {\r\n    event.preventDefault();\r\n    console.log('button clicked', event.target[0].value);\r\n\r\n    const noteObject = {\r\n      id: Date.now(),\r\n      content: newNote,\r\n      date: new Date().toISOString(),\r\n      important: Math.random() > 0.5,\r\n    };\r\n\r\n    noteService.create(noteObject).then((returnedNote) => {\r\n      setNotes(notes.concat(returnedNote));\r\n      setNewNote('');\r\n    });\r\n  };\r\n\r\n  const toggleImportanceOf = (id) => {\r\n    console.log(`importance of ${id} needs to be toggled`);\r\n    const note = notes.find((n) => n.id === id);\r\n    const changedNote = { ...note, important: !note.important };\r\n    noteService\r\n      .update(id, changedNote)\r\n      .then((returnedNote) => {\r\n        setNotes(notes.map((note) => (note.id !== id ? note : returnedNote)));\r\n      })\r\n      // Error handling\r\n      .catch((error) => {\r\n        setErrorMessage(\r\n          error,\r\n          `Note '${note.content}' was already removed from server`\r\n        );\r\n        setTimeout(() => {\r\n          setErrorMessage(null);\r\n        }, 5000);\r\n        setNotes(notes.filter((n) => n.id !== id));\r\n      });\r\n  };\r\n\r\n  const handleNoteChange = (event) => {\r\n    setNewNote(event.target.value);\r\n  };\r\n\r\n  const notesToShow = showAll\r\n    ? notes\r\n    : notes.filter((note) => note.important === true);\r\n\r\n  return (\r\n    <div>\r\n      <h1>Notes</h1>\r\n      <Notification message={errorMessage} />\r\n      <div>\r\n        <button onClick={() => setShowAll(!showAll)}>\r\n          show {showAll ? 'important' : 'all'}\r\n        </button>\r\n      </div>\r\n      <ul>\r\n        {notesToShow.map((note) => (\r\n          <Note\r\n            key={note.id}\r\n            note={note}\r\n            toggleImportance={() => toggleImportanceOf(note.id)}\r\n          />\r\n        ))}\r\n      </ul>\r\n      <form onSubmit={addNote}>\r\n        <input value={newNote} onChange={handleNoteChange} />\r\n        <button type=\"submit\">save</button>\r\n      </form>\r\n      <Footer text=\"Note app, Department of Computer Science, University of Helsinki 2020\" />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default App;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);"],"sourceRoot":""}